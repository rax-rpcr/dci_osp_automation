---

- name: Generate the ironic node import file
  template:
    src: instackenv.json.j2
    dest: /home/stack/instackenv.json
  tags:
    - register_ironic_nodes

- name: Check if import needs ran
  shell: |
    . /home/stack/stackrc
    if [ "$(openstack baremetal node list)" == "" ];then
        echo "run import"
    fi
  register: runimport
  tags:
    - register_ironic_nodes

- name: Validate the file for import
  shell: |
    . /home/stack/stackrc
    openstack overcloud node import --validate-only /home/stack/instackenv.json
  when: runimport.stdout == "run import"
  register: jsonvalidate
  tags:
    - register_ironic_nodes

- name: Run the import if it needs it and validation checks out
  shell: |
    . /home/stack/stackrc
    openstack overcloud node import /home/stack/instackenv.json
  when: runimport.stdout == "run import" and jsonvalidate.rc == 0 
  register: jsonvalidate
  tags:
    - register_ironic_nodes

- name: If nodes in place and 'managable', run introspection before moving to 'provide'
  shell: |
    . /home/stack/stackrc
    openstack baremetal node list | grep manageable
    if [ $? == 0 ]; then
      echo "Running: openstack overcloud node introspect --all-manageable --provide"
      openstack overcloud node introspect --all-manageable --provide
    fi
  tags:
    - register_ironic_nodes

- name: Make sure the /home/stack/introspection_data_dump dir exists
  file:
    name: /home/stack/introspection_data_dump/
    state: directory
  tags:
    - register_ironic_nodes

- name: Dump introspection data for each node.
  shell: |
    . /home/stack/stackrc
    {% for curnode in ironic_nodes %}
    if [ ! -f /home/stack/introspection_data_dump/{{ curnode.name }}.json ]; then
      openstack baremetal introspection data save {{ curnode.name }} \
        | python3 -m json.tool > /home/stack/introspection_data_dump/{{ curnode.name }}.json
    fi
    {% endfor %}
  tags:
    - register_ironic_nodes

- name: Set profile for each node via the capabilities properly
  shell: |
    . /home/stack/stackrc
    {% for curnode in ironic_nodes %}
        openstack baremetal node show {{ curnode.name }} --fields properties | grep profile
        if [ $? != 0 ]; then
          openstack baremetal node set --property capabilities='profile:{{ curnode.profile }},boot_option:local' {{ curnode.name }}
        fi
    {% endfor %}
  tags:
    - register_ironic_nodes
